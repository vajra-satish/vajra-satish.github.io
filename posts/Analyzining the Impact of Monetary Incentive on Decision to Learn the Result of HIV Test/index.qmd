---
title: "Analyzing the Impact of Receiving Monetary Incentive on Decision to Learn the Result of HIV Test"
author: "Satish Bajracharya"
date: "2024-03-18"
categories: [RCT, R, Stata]
image: "image.jpg"
engine: "knitr"
---

We use data from **"The Demand for, and Impact of, Learning HIV Status"** study in Malawi. The study uses a randomized controlled trial (RCT), where individuals were provided varying degrees of monetary incentives to learn about their HIV status after receiving an HIV Test. 

::: callout-note
Study: Thornton, Rebecca L. 2008. “The Demand for, and Impact of, Learning HIV Status.” American Economic Review, 98 (5): 1829-63. 

Data file: [Click here](https://www.aeaweb.org/aer/data/dec08/20060732_data.zip)

Detailed description of the intervention: [Click here](https://www.povertyactionlab.org/evaluation/demand-and-impact-learning-hiv-status-malawi)
:::

We use the "Thornton HIV Testing Data.dta" for the analysis.

## Importing and describing the data

##### Execution in R

The data file is a Stata (.dta) file. To import the data set in R, we will need to install the **Haven** package in R and use the **read_dta()** function. Run the following code in R to install the Haven package:

```
install.packages("haven")
```

Now, import the data set and check the list of variables and number of observations. When you download the data file, it comes with a readme file. Please read the readme file to learn more about the variables. 

::: callout-tip
## The str function in R

The str () function in R provides the structure of the dataset. However, we will only use the names () and dim() function here to make the content of this analysis shorter. Please check the Stata execution section to get a detailed description of the variables. 
:::

```{r, warning = FALSE}
library(haven)
# import the .dta file
data <- read_dta("C:/Impact Evaluation/Regression Analysis/Data/Thornton HIV Testing Data.dta")
# List of variables
names(data)
# dimensions of the dataset
dim(data)
```

There are 44 variables and 4,820 observations.

##### Execution in Stata

Use the cd command to import the dataset. The describe command provides a list of variables with their types and labels. 

```{stata, engine.path="C:/Stata15/Stata-64.exe"}
cd "C://Impact Evaluation"
use "Regression Analysis\Data\Thornton HIV Testing Data.dta", clear 
describe
```

## Regression Analysis

Here, we analyze the impact of receiving any monetary incentive on the decision to receive results from study participant's HIV test. The **tinc** variable records the amount of monetary incentive received (in kwacha) by the study participants. We tabulate the variable tinc to see the range of monetary incentives offered.

##### Execution in R

```{r message = FALSE, warning = FALSE}
library(dplyr)
# ensure that all rows are diplayed when priting tibbles
options (tibble.print_max = Inf) 
# tabulate tinc
data |> filter(!is.na(tinc))|> # remove NA
  select(tinc) |> # select tinc from dataset
  group_by(tinc) |> # group by tinc
  summarize(count=n()) |> # create table with frequency 
  mutate(percent = count/sum(count)*100) |> # create percent variable
  round(digits = 2) # round the digits upto 2 decimal points
```

##### Execution in Stata

```{stata, engine.path="C:/Stata15/Stata-64.exe"}
cd "C://Impact Evaluation"
use "Regression Analysis\Data\Thornton HIV Testing Data.dta", clear
tabulate tinc
```

### Running the Regression

Here, we only focus on analyzing the effect of receiving any financial incentive. Thus, we create a factor variable indicating whether the respondent has received an incentive or not. Once we create the treatment variable we run a regression to analyze the impact of receiving a financial incentive on the decision to obtain HIV results. The variable **got** indicates whether or not the respondent received the HIV result. In R we use the lm () function to run a regrssion. In Stata we use the regress command for the same

##### Execution in R

```{r}
data_1 <- data |>
  filter(!is.na(tinc)) |>
  mutate(treatment = ifelse(tinc > 0, 1, 0))
data_1$treatment <- factor(data_1$treatment, 
                       levels = c(0, 1),
                       labels = c("Control", "Treatment"))
reg <- lm(got ~ treatment, data = data_1)
summary(reg)
```

##### Execution in Stata

```{stata, engine.path="C:/Stata15/Stata-64.exe"}
cd "C://Impact Evaluation"
use "Regression Analysis\Data\Thornton HIV Testing Data.dta", clear
drop if missing(tinc) | missing(got)
generate treatment = cond(tinc>0, 1, 0)
label define treatment 0 "Control" 1 "Treatment"
label val treatment treatment
regress got treatment
```

The treatment effect of receiving a financial incentive is 0.4506 or about 45 percentage points, compared to the control group average of about 34 percentage points. The treatment effect is statistically significant (has a p-value of 0.000).

### Robust Standard Errors

When making comparison between the distribution of outcomes between two groups, we assume that the two groups have the same variance even though their means differed. This assumption is called the homoskedasticity assumption. However, when the variance in the treatment and control group are different the assumption of homoskedasticity is violated, i.e., the error terms are heteroskedastic. In such cases, we have to use robust standard errors to account for heteroskedasticity. The robust standard errors do not affect the estimates of the parameters in the regression. The robust standard errors tend to be larger than the unadjusted standard errors, which in turn makes the confidence interval wider. 

To test for heteroskedasticity, we run the Breusch-Pagan / Cook-Weisberg test for heteroskedasticity. It tests the null hypothesis of homoskedasticity against the alternative hypothesis of heteroskedasticity. We need to install the lmtest package and run the bttest() function. 

##### Execution in R

```{r}
library(lmtest)
bptest(reg) 
```

##### Execution in Stata

We use the estat hettest command in Stata to test ko heteroskedasticity. 

```{stata, engine.path="C:/Stata15/Stata-64.exe"}
cd "C://Impact Evaluation"
use "Regression Analysis\Data\Thornton HIV Testing Data.dta", clear
drop if missing(tinc) | missing(got)
generate treatment = cond(tinc>0, 1, 0)
label define treatment 0 "Control" 1 "Treatment"
label val treatment treatment
regress got treatment
estat hettest
```