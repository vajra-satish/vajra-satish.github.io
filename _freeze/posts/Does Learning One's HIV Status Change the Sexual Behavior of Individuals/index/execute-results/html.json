{
  "hash": "b43497ba6afe50c64c28d23019c86309",
  "result": {
    "markdown": "---\ntitle: \"Measuring Impact in an Experiment with Partial Compliance: HIV Status and Changes in Sexual Behavior\"\nauthor: \"Satish Bajracharya\"\ndate: \"2024-03-21\"\ncategories: [RCT, R, Stata]\nimage: \"image.jpg\"\nengine: \"knitr\"\n---\n\n::: {.cell}\n<style type=\"text/css\">\np {\n  text-align: justify\n}\n</style>\n:::\n\n\nWe use data from **\"The Demand for, and Impact of, Learning HIV Status\"** study in Malawi. The study uses a randomized controlled trial (RCT) design, where individuals received varying degrees of monetary incentives to learn about their HIV status after undergoing an HIV Test. \n\n::: callout-note\nStudy: Thornton, Rebecca L. 2008. “The Demand for, and Impact of, Learning HIV Status.” American Economic Review, 98 (5): 1829-63. \n\nData file: [Click here](https://www.aeaweb.org/aer/data/dec08/20060732_data.zip)\n\nDetailed description of the intervention: [Click here](https://www.povertyactionlab.org/evaluation/demand-and-impact-learning-hiv-status-malawi)\n:::\n\nFor the analysis, we use the \"Thornton HIV Testing Data.dta\" file.\n\n## Import the data\n\n##### Execution in R\n\nThe data file is a Stata (.dta) file. To import the dataset in R, we will need to install the **haven** package in R and use the **read_dta()** function. Run the following code in R to install the haven package:\n\n```\ninstall.packages(\"haven\")\n```\n\nThe downloaded files come with a readme document, which gives a detailed description of the variables used in the study.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(haven)\nlibrary(dplyr)\nlibrary(estimatr)# for robust standard errors\n# import the .dta file\ndata <- read_dta(\"C:/Data analysis/Thornton data/Data/Thornton HIV Testing Data.dta\")\n```\n:::\n\n\n##### Execution in Stata\n\nUse the cd command to import the dataset. \n\n\n::: {.cell engine.path='C:/Stata15/Stata-64.exe'}\n\n```{.stata .cell-code}\ncd \"C://Data analysis\"\nuse \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear \n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n. cd \"C://Data analysis\"\nC:\\Data analysis\n\n. use \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear \n```\n:::\n:::\n\n\n## Create treatment variable\n\nWe create a variable called treatment, which takes on a value of 1 if the participant received any financial incentive, and otherwise takes on a value of 0. The variable tinc records the amount of monetary incentive received by the respondents. We label the values of 0 and 1 as control and treatment. \n\n##### Execution in R\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_1 <- data |>\n  filter(!is.na(tinc)) |> #remove na in tinc\n  mutate(treatment = ifelse(tinc > 0, 1, 0)) # create treatment variable\ndata_1$treatment <- factor(data_1$treatment, \n                       levels = c(0, 1),\n                       labels = c(\"Control\", \"Treatment\"))\n```\n:::\n\n\n##### Execution in Stata\n\n\n::: {.cell engine.path='C:/Stata15/Stata-64.exe'}\n\n```{.stata .cell-code}\ncd \"C://Data analysis\"\nuse \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear\ngenerate treatment = cond(tinc>0, 1, 0)\nlabel define treatment 0 \"Control\" 1 \"Treatment\"\nlabel val treatment treatment\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n. cd \"C://Data analysis\"\nC:\\Data analysis\n\n. use \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear\n\n. generate treatment = cond(tinc>0, 1, 0)\n\n. label define treatment 0 \"Control\" 1 \"Treatment\"\n\n. label val treatment treatment\n```\n:::\n:::\n\n\n## Calculating the compliance rate\n\nIn this analysis, we try to study the effect of learning one's HIV status on the decision to purchase a condom. We focus on a sub-group of individuals who are sexually active and HIV positive. To do this, we need to restrict our sample to the sexually active and HIV positive individuals and calculate the compliance rate for this sub-group. \n\n::: callout-note\nBaseline data was collected in 2004 and follow up data was collected in 2005.\n\nVariable description:  \n\n**treatment**: takes on the value of 1 if individual received monetary incentive and 0 otherwise.  \n**hadsex12**: Indicator if reported having sex in the pas 12 months from baseline (1 = Yes, 0 = No).  \n**hiv2004**: HIV results (1 = HIV Positive, 0 = HIV Negative, -1 = Indeterminent)  \n**got**: Indicator if obtained HIV results (1 = learned HIV results)  \n**anycond**: Indicator of any condom purchased at the follow-up survey\n:::\n\n##### Execution in R\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_1 <- data_1 |>\n  filter( hadsex12 == 1, # restrict the sample size to hadsex 12 & hiv 2004\n          hiv2004 == 1,\n          !is.na(got), # remove NAs\n          !is.na(anycond)) # remove NAs\n# create variable to calculate the share of people in the control and treatment group\ndata_1 <- data_1 |>\n  mutate(followed_treatment = ifelse(treatment ==  \"Treatment\", got, 1-got)) \n# tabulate followed_treatment given treatment == 1\ntrt_dat <- data_1 |>\n  filter(treatment == \"Treatment\") |>\n  select(followed_treatment) |>\n  group_by(followed_treatment) |>\n  summarize(Count = n()) |>\n  mutate(Percent = Count/sum(Count))\nprint(trt_dat) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  followed_treatment Count Percent\n               <dbl> <int>   <dbl>\n1                  0    12   0.286\n2                  1    30   0.714\n```\n:::\n\n```{.r .cell-code}\n# tabulate followed_treatment given treatment == 0\ncntrl_dat <- data_1 |>\n  filter(treatment == \"Control\") |>\n  select(followed_treatment) |>\n  group_by(followed_treatment) |>\n  summarize(Count = n()) |>\n  mutate(Percent = Count/sum(Count))\nprint(cntrl_dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  followed_treatment Count Percent\n               <dbl> <int>   <dbl>\n1                  0     3     0.3\n2                  1     7     0.7\n```\n:::\n\n```{.r .cell-code}\n# calculate the compliance rate\ncompliance_rate <- 71.4-30.0\nprint(compliance_rate)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 41.4\n```\n:::\n:::\n\n\n##### Execution in Stata\n\n\n::: {.cell engine.path='C:/Stata15/Stata-64.exe'}\n\n```{.stata .cell-code}\ncd \"C://Data analysis\"\nuse \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear\ngenerate treatment = cond(tinc>0, 1, 0)\nlabel define treatment 0 \"Control\" 1 \"Treatment\"\nlabel val treatment treatment\nkeep if hadsex12 == 1 & hiv2004 == 1\ndrop if missing(tinc) | missing(got) | missing(anycond)\ngenerate followed_treatment = cond(treatment == 1, got, 1-got)\ntab followed_treatment if treatment == 0\ntab followed_treatment if treatment == 1\ndis \"Compliance rate =\" 71.4 - 30\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n. cd \"C://Data analysis\"\nC:\\Data analysis\n\n. use \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear\n\n. generate treatment = cond(tinc>0, 1, 0)\n\n. label define treatment 0 \"Control\" 1 \"Treatment\"\n\n. label val treatment treatment\n\n. keep if hadsex12 == 1 & hiv2004 == 1\n(4,698 observations deleted)\n\n. drop if missing(tinc) | missing(got) | missing(anycond)\n(70 observations deleted)\n\n. generate followed_treatment = cond(treatment == 1, got, 1-got)\n\n. tab followed_treatment if treatment == 0\n\nfollowed_tr |\n    eatment |      Freq.     Percent        Cum.\n------------+-----------------------------------\n          0 |          3       30.00       30.00\n          1 |          7       70.00      100.00\n------------+-----------------------------------\n      Total |         10      100.00\n\n. tab followed_treatment if treatment == 1\n\nfollowed_tr |\n    eatment |      Freq.     Percent        Cum.\n------------+-----------------------------------\n          0 |         12       28.57       28.57\n          1 |         30       71.43      100.00\n------------+-----------------------------------\n      Total |         42      100.00\n\n. dis \"Compliance rate =\" 71.4 - 30\nCompliance rate =41.4\n```\n:::\n:::\n\n\nHere, 71.4% of the treatment group learned about their HIV status and 30% of the control group did so. The compliance rate is the difference between the share of treated individuals in the treatment group (71.43%) and the share of treated individuals in the control group (30%). Hence, the compliance rate for the experiment is 41.4% (71.43% - 30%).\n\n## Calculating the Intent to Treat Effect and the Local Average Treatment Effect (LATE) estimate\n\nIn R, we use the **lm_robust()** function from the **estimatr** package to run a regression with robust standard errors. In Stata, we use the regress command with the robust option for the same.\n\n##### Execution in R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreg <- lm_robust(anycond ~ treatment, data = data_1, se_type = \"HC1\")\nsummary(reg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm_robust(formula = anycond ~ treatment, data = data_1, se_type = \"HC1\")\n\nStandard error type:  HC1 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|) CI Lower CI Upper DF\n(Intercept)          0.2000     0.1290   1.550   0.1273 -0.05910   0.4591 50\ntreatmentTreatment   0.2286     0.1507   1.517   0.1356 -0.07408   0.5312 50\n\nMultiple R-squared:  0.03429 ,\tAdjusted R-squared:  0.01497 \nF-statistic: 2.301 on 1 and 50 DF,  p-value: 0.1356\n```\n:::\n:::\n\n##### Execution in Stata\n\n\n::: {.cell engine.path='C:/Stata15/Stata-64.exe'}\n\n```{.stata .cell-code}\ncd \"C://Data analysis\"\nuse \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear\ngenerate treatment = cond(tinc>0, 1, 0)\nlabel define treatment 0 \"Control\" 1 \"Treatment\"\nlabel val treatment treatment\nkeep if hadsex12 == 1 & hiv2004 == 1\ndrop if missing(tinc) | missing(got) | missing(anycond)\nregress anycond treatment, robust\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n. cd \"C://Data analysis\"\nC:\\Data analysis\n\n. use \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear\n\n. generate treatment = cond(tinc>0, 1, 0)\n\n. label define treatment 0 \"Control\" 1 \"Treatment\"\n\n. label val treatment treatment\n\n. keep if hadsex12 == 1 & hiv2004 == 1\n(4,698 observations deleted)\n\n. drop if missing(tinc) | missing(got) | missing(anycond)\n(70 observations deleted)\n\n. regress anycond treatment, robust\n\nLinear regression                               Number of obs     =         52\n                                                F(1, 50)          =       2.30\n                                                Prob > F          =     0.1356\n                                                R-squared         =     0.0343\n                                                Root MSE          =     .48756\n\n------------------------------------------------------------------------------\n             |               Robust\n     anycond |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n   treatment |   .2285714   .1506789     1.52   0.136    -.0740761     .531219\n       _cons |         .2   .1289961     1.55   0.127    -.0590963    .4590963\n------------------------------------------------------------------------------\n```\n:::\n:::\n\n\nThe estimates show that 20% of the sexually active HIV-positive individuals, who did not receive any monetary incentive to learn about their HIV status, still purchased condoms. In contrast, individuals who received a monetary incentive to learn about their HIV status were 22.86% more likely to purchase condoms. This is the intent to treat effect. Even though the monetary incentive provided to learn about one's HIV status increased the willingness to buy condoms, it is not statistically significant. \n\nNext, we use the results of the regression of anycond on treatment and got on treatment to calculate the Local Average Treatment Effect (LATE). \n\n::: callout-note\nLATE = Intent to Treat / Compliance rate\n:::\n\n##### Execution in R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreg_1 <- lm_robust(got ~ treatment, data = data_1, se_type = \"HC1\")\nsummary(reg_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm_robust(formula = got ~ treatment, data = data_1, se_type = \"HC1\")\n\nStandard error type:  HC1 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|) CI Lower CI Upper DF\n(Intercept)          0.3000     0.1478   2.030  0.04769 0.003168   0.5968 50\ntreatmentTreatment   0.4143     0.1640   2.526  0.01474 0.084898   0.7437 50\n\nMultiple R-squared:  0.115 ,\tAdjusted R-squared:  0.09727 \nF-statistic: 6.382 on 1 and 50 DF,  p-value: 0.01474\n```\n:::\n\n```{.r .cell-code}\nLATE <- 0.2285714/0.4142957\nprint(LATE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.5517108\n```\n:::\n:::\n\n\n##### Execution in Stata\n\n\n::: {.cell engine.path='C:/Stata15/Stata-64.exe'}\n\n```{.stata .cell-code}\ncd \"C://Data analysis\"\nuse \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear\ngenerate treatment = cond(tinc>0, 1, 0)\nlabel define treatment 0 \"Control\" 1 \"Treatment\"\nlabel val treatment treatment\nkeep if hadsex12 == 1 & hiv2004 == 1\ndrop if missing(tinc) | missing(got) | missing(anycond)\nregress got treatment, robust\ndis \"LATE =\" 0.2285714/0.4142857\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n. cd \"C://Data analysis\"\nC:\\Data analysis\n\n. use \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear\n\n. generate treatment = cond(tinc>0, 1, 0)\n\n. label define treatment 0 \"Control\" 1 \"Treatment\"\n\n. label val treatment treatment\n\n. keep if hadsex12 == 1 & hiv2004 == 1\n(4,698 observations deleted)\n\n. drop if missing(tinc) | missing(got) | missing(anycond)\n(70 observations deleted)\n\n. regress got treatment, robust\n\nLinear regression                               Number of obs     =         52\n                                                F(1, 50)          =       6.38\n                                                Prob > F          =     0.0147\n                                                R-squared         =     0.1150\n                                                Root MSE          =     .46198\n\n------------------------------------------------------------------------------\n             |               Robust\n         got |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n   treatment |   .4142857   .1639922     2.53   0.015     .0848976    .7436738\n       _cons |         .3   .1477836     2.03   0.048     .0031679    .5968321\n------------------------------------------------------------------------------\n\n. dis \"LATE =\" 0.2285714/0.4142857\nLATE =.55172409\n```\n:::\n:::\n\n\nThe coefficient of treatment variable in this regression is equal to compliance rate that we calculated earlier. Amongst sexually active and HIV-positive respondents, we estimate that learning one's HIV status increases the likelihood of purchasing condoms by about 55.17%. However, when we calculate the LATE estimate this way, we will not get the standard errors and we will not know if it is statistically significant. An alternative is to use the 2 SLS method to calculate the LATE effect. \n\n#### Execution in R\n\n\n::: {.cell}\n\n```{.r .cell-code}\niv_reg <- iv_robust(anycond ~ got | treatment, data = data_1, se_type = \"HC1\")\nsummary(iv_reg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\niv_robust(formula = anycond ~ got | treatment, data = data_1, \n    se_type = \"HC1\")\n\nStandard error type:  HC1 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)  CI Lower CI Upper DF\n(Intercept)  0.03448     0.1561  0.2208  0.82612 -0.279152   0.3481 50\ngot          0.55172     0.2729  2.0219  0.04855  0.003643   1.0998 50\n\nMultiple R-squared:  0.1776 ,\tAdjusted R-squared:  0.1612 \nF-statistic: 4.088 on 1 and 50 DF,  p-value: 0.04855\n```\n:::\n:::\n\n\n##### Execution in Stata\n\n\n::: {.cell engine.path='C:/Stata15/Stata-64.exe'}\n\n```{.stata .cell-code}\ncd \"C://Data analysis\"\nuse \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear\ngenerate treatment = cond(tinc>0, 1, 0)\nlabel define treatment 0 \"Control\" 1 \"Treatment\"\nlabel val treatment treatment\nkeep if hadsex12 == 1 & hiv2004 == 1\ndrop if missing(tinc) | missing(got) | missing(anycond)\nivregress 2sls anycond (got = treatment), robust\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n. cd \"C://Data analysis\"\nC:\\Data analysis\n\n. use \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear\n\n. generate treatment = cond(tinc>0, 1, 0)\n\n. label define treatment 0 \"Control\" 1 \"Treatment\"\n\n. label val treatment treatment\n\n. keep if hadsex12 == 1 & hiv2004 == 1\n(4,698 observations deleted)\n\n. drop if missing(tinc) | missing(got) | missing(anycond)\n(70 observations deleted)\n\n. ivregress 2sls anycond (got = treatment), robust\n\nInstrumental variables (2SLS) regression          Number of obs   =         52\n                                                  Wald chi2(1)    =       4.25\n                                                  Prob > chi2     =     0.0392\n                                                  R-squared       =     0.1776\n                                                  Root MSE        =     .44118\n\n------------------------------------------------------------------------------\n             |               Robust\n     anycond |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n         got |   .5517241   .2675736     2.06   0.039     .0272896    1.076159\n       _cons |   .0344828   .1531167     0.23   0.822    -.2656204    .3345859\n------------------------------------------------------------------------------\nInstrumented:  got\nInstruments:   treatment\n```\n:::\n:::\n\n\nThe coefficient of **got** in the regression and the calculated value for the LATE estimate are the same. The 2SLS regression estimates a p-value of 0.039 for **got**. Therefore, we can conclude that learning about one's HIV-positive status increases the likelihood of purchasing condoms by a statistically significant margin. \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}