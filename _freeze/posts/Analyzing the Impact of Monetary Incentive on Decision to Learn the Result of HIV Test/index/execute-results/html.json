{
  "hash": "a09e66290cdb213640447f9c801d3ef1",
  "result": {
    "markdown": "---\ntitle: \"Analyzing the Impact of Receiving Monetary Incentive on Decision to Learn the Result of HIV Test\"\nauthor: \"Satish Bajracharya\"\ndate: \"2024-03-18\"\ncategories: [RCT, R, Stata]\nimage: \"image.jpg\"\nengine: \"knitr\"\n---\n\n::: {.cell}\n<style type=\"text/css\">\np {\n  text-align: justify\n}\n</style>\n:::\n\n\n::: callout-tip\n## Comparing outcomes between treatment and control group\n\nHere, we apply regression analysis to analyze the impact of receiving monetary incentive on decision to learn the result of HIV test. Visit my previous [blog](https://vajra-satish.github.io/blogs/Comparison%20Between%20Treatment%20and%20Control%20Group%20-%20Regression%20Analysis/) to learn more about the theoretical aspects discussed in this section. \n:::\n\nWe use data from **\"The Demand for, and Impact of, Learning HIV Status\"** study in Malawi. The study uses a randomized controlled trial (RCT), where individuals were provided varying degrees of monetary incentives to learn about their HIV status after receiving an HIV Test. \n\n::: callout-note\nStudy: Thornton, Rebecca L. 2008. “The Demand for, and Impact of, Learning HIV Status.” American Economic Review, 98 (5): 1829-63. \n\nData file: [Click here](https://www.aeaweb.org/aer/data/dec08/20060732_data.zip)\n\nDetailed description of the intervention: [Click here](https://www.povertyactionlab.org/evaluation/demand-and-impact-learning-hiv-status-malawi)\n:::\n\nWe use the \"Thornton HIV Testing Data.dta\" for the analysis.\n\n## Importing and describing the data\n\n##### Execution in R\n\nThe data file is a Stata (.dta) file. To import the dataset in R, we will need to install the **haven** package in R and use the **read_dta()** function. Run the following code in R to install the haven package:\n\n```\ninstall.packages(\"haven\")\n```\n\nNow, import the dataset and check the list of variables and number of observations. When you download the data file, it comes with a readme file. Please read the readme file to learn more about the variables. \n\n::: callout-tip\n## The str function in R\n\nThe str () function in R provides the structure of the dataset. However, we will only use the names () and dim() function here to make the content of this analysis shorter. Please check the Stata execution section to get a detailed description of the variables. \n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(haven)\n# import the .dta file\ndata <- read_dta(\"C:/Data analysis/Thornton data/Data/Thornton HIV Testing Data.dta\")\n# List of variables\nnames(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"site\"                \"rumphi\"              \"balaka\"             \n [4] \"villnum\"             \"m1out\"               \"m2out\"              \n [7] \"survey2004\"          \"got\"                 \"zone\"               \n[10] \"distvct\"             \"tinc\"                \"Ti\"                 \n[13] \"any\"                 \"under\"               \"over\"               \n[16] \"simaverage\"          \"age\"                 \"age2\"               \n[19] \"male\"                \"mar\"                 \"educ2004\"           \n[22] \"timeshadsex_s\"       \"hadsex12\"            \"eversex\"            \n[25] \"usecondom04\"         \"tb\"                  \"thinktreat\"         \n[28] \"a8\"                  \"land2004\"            \"T_consentsti\"       \n[31] \"T_consenthiv\"        \"T_final_trichresult\" \"T_final_result_ct\"  \n[34] \"T_final_result_gc\"   \"hiv2004\"             \"test2004\"           \n[37] \"followup_tested\"     \"followupsurvey\"      \"havesex_fo\"         \n[40] \"numsex_fo\"           \"likelihoodhiv_fo\"    \"numcond\"            \n[43] \"anycond\"             \"bought\"             \n```\n:::\n\n```{.r .cell-code}\n# dimensions of the dataset\ndim(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4820   44\n```\n:::\n:::\n\n\nThere are 44 variables and 4,820 observations.\n\n##### Execution in Stata\n\nUse the cd command to import the dataset. The describe command provides a list of variables with their types and labels. \n\n\n::: {.cell engine.path='C:/Stata15/Stata-64.exe'}\n\n```{.stata .cell-code}\ncd \"C://Data analysis\"\nuse \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear  \ndescribe\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n. cd \"C://Data analysis\"\nC:\\Data analysis\n\n. use \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear  \n\n. describe\n\nContains data from Thornton data/Data/Thornton HIV Testing Data.dta\n  obs:         4,820                          \n vars:            44                          12 Mar 2008 11:10\n size:       785,660                          (_dta has notes)\n-------------------------------------------------------------------------------\n              storage   display    value\nvariable name   type    format     label      variable label\n-------------------------------------------------------------------------------\nsite            float   %9.0g                 1=Mchinji 2=Balaka 3=Rumphi\nrumphi          float   %9.0g                 Rumphi\nbalaka          float   %9.0g                 Balaka\nvillnum         double  %9.0g                 VILLNUM\nm1out           float   %9.0g                 Survey outcome in 1998\nm2out           float   %9.0g                 Survey outcome in 2001\nsurvey2004      float   %9.0g                 completed baseline survey\ngot             float   %9.0g                 Got HIV results\nzone            float   %9.0g                 VCT zone\ndistvct         float   %9.0g                 Distance in km\ntinc            float   %9.0g                 Total value of the incentive\n                                                (kwacha)\nTi              float   %9.0g                 Value of incentive (kwacha)\n                                                discrete\nany             float   %9.0g                 Received any incentive\nunder           float   %9.0g                 under 1.5 km\nover            float   %9.0g                 over 1.5 km\nsimaverage      float   %9.0g                 (mean) simaverage\nage             float   %10.0g                Age\nage2            float   %9.0g                 Age squared\nmale            float   %9.0g                 Gender\nmar             float   %9.0g                 Married at baseline\neduc2004        float   %9.0g                 Yrs of completed education\ntimeshadsex_s   byte    %8.0g                 Times per month had sex\n                                                (subsample)\nhadsex12        float   %9.0g                 Had sex in past 12 months\n                                                (baseline)\neversex         float   %9.0g                 Ever had sex at baseline\nusecondom04     float   %9.0g                 Used a condom during last year at\n                                                baseline\ntb              float   %9.0g                 HIV Test before baseline\nthinktreat      float   %9.0g                 Think there will be ARV treatment\n                                                in the future\na8              byte    %8.0g      A8         Likelihood of HIV infection\nland2004        float   %9.0g                 Owned any land at baseline\nT_consentsti    long    %8.0g      yesno      consent to sti test\nT_consenthiv    long    %8.0g      yesno      consent to hiv test\nT_final_trich~t float   %9.0g      res        final trich results\nT_final_resul~t float   %23.0g     otherres   final CT results\nT_final_resul~c float   %23.0g     otherres   final GC results\nhiv2004         float   %9.0g                 HIV results\ntest2004        float   %9.0g                 HIV test in 2004\nfollowup_tested byte    %8.0g                 Different HIV testing sample.\n                                                Drop from analysis\nfollowupsurvey  float   %9.0g                 Was interviewed at follow-up\nhavesex_fo      byte    %10.0g                Had sex between baseline and\n                                                follow-up\nnumsex_fo       byte    %10.0g                Num partners between baseline and\n                                                follow-up\nlikelihoodhiv~o int     %10.0g                Likelihood of infection at\n                                                follow-up\nnumcond         float   %9.0g                 Number of condoms purchased at\n                                                follow-up\nanycond         float   %9.0g                 Any condoms purchased at the\n                                                follow-up\nbought          float   %9.0g                 Bought condoms on own at\n                                                follow-up\n-------------------------------------------------------------------------------\nSorted by: \n```\n:::\n:::\n\n\n## Regression Analysis\n\nHere, we analyze the impact of receiving any monetary incentive on the decision to receive results from study participant's HIV test. The **tinc** variable records the amount of monetary incentive received (in kwacha) by the study participants. We tabulate the variable tinc to see the range of monetary incentives offered.\n\n##### Execution in R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n# ensure that all rows are diplayed when priting tibbles\noptions (tibble.print_max = Inf) \n# tabulate tinc\ndata |> filter(!is.na(tinc))|> # remove NA\n  select(tinc) |> # select tinc from dataset\n  group_by(tinc) |> # group by tinc\n  summarize(count=n()) |> # create table with frequency \n  mutate(percent = count/sum(count)*100) |> # create percent variable\n  round(digits = 2) # round the digits upto 2 decimal points\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 27 × 3\n    tinc count percent\n   <dbl> <dbl>   <dbl>\n 1     0   679   23.4 \n 2    10    58    2   \n 3    20   154    5.31\n 4    30    81    2.79\n 5    40    64    2.21\n 6    50   205    7.07\n 7    60    37    1.28\n 8    70    40    1.38\n 9    80     7    0.24\n10    90     8    0.28\n11   100   492   17.0 \n12   110    14    0.48\n13   120    82    2.83\n14   130     9    0.31\n15   140    42    1.45\n16   150    43    1.48\n17   160    28    0.97\n18   170     8    0.28\n19   180     9    0.31\n20   200   431   14.9 \n21   210    36    1.24\n22   220    48    1.65\n23   230    30    1.03\n24   240     2    0.07\n25   250    68    2.34\n26   260     3    0.1 \n27   300   223    7.69\n```\n:::\n:::\n\n\n##### Execution in Stata\n\n\n::: {.cell engine.path='C:/Stata15/Stata-64.exe'}\n\n```{.stata .cell-code}\ncd \"C://Data analysis\"\nuse \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear \ntabulate tinc\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n. cd \"C://Data analysis\"\nC:\\Data analysis\n\n. use \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear \n\n. tabulate tinc\n\nTotal value |\n     of the |\n  incentive |\n   (kwacha) |      Freq.     Percent        Cum.\n------------+-----------------------------------\n          0 |        679       23.41       23.41\n         10 |         58        2.00       25.41\n         20 |        154        5.31       30.71\n         30 |         81        2.79       33.51\n         40 |         64        2.21       35.71\n         50 |        205        7.07       42.78\n         60 |         37        1.28       44.05\n         70 |         40        1.38       45.43\n         80 |          7        0.24       45.67\n         90 |          8        0.28       45.95\n        100 |        492       16.96       62.91\n        110 |         14        0.48       63.39\n        120 |         82        2.83       66.22\n        130 |          9        0.31       66.53\n        140 |         42        1.45       67.98\n        150 |         43        1.48       69.46\n        160 |         28        0.97       70.42\n        170 |          8        0.28       70.70\n        180 |          9        0.31       71.01\n        200 |        431       14.86       85.87\n        210 |         36        1.24       87.11\n        220 |         48        1.65       88.76\n        230 |         30        1.03       89.80\n        240 |          2        0.07       89.87\n        250 |         68        2.34       92.21\n        260 |          3        0.10       92.31\n        300 |        223        7.69      100.00\n------------+-----------------------------------\n      Total |      2,901      100.00\n```\n:::\n:::\n\n\n### Running the Regression\n\nHere, we only focus on analyzing the effect of receiving any financial incentive. Thus, we create a factor variable indicating whether the respondent has received an incentive or not. Once we create the treatment variable, we run a regression to analyze the impact of receiving financial incentive on the decision to obtain HIV results. The variable **got** indicates whether or not the respondent received the HIV result. In R we use the **lm ()** function to run a regression. In Stata we use the regress command for the same.\n\n##### Execution in R\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_1 <- data |>\n  filter(!is.na(tinc)) |> #remove na in tinc\n  mutate(treatment = ifelse(tinc > 0, 1, 0)) # create treatment variable\ndata_1$treatment <- factor(data_1$treatment, \n                       levels = c(0, 1),\n                       labels = c(\"Control\", \"Treatment\"))\nreg <- lm(got ~ treatment, data = data_1) #run the regression\nsummary(reg)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = got ~ treatment, data = data_1)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-0.7892 -0.3387  0.2108  0.2108  0.6613 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(>|t|)    \n(Intercept)         0.33868    0.01696   19.97   <2e-16 ***\ntreatmentTreatment  0.45055    0.01920   23.47   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.4232 on 2832 degrees of freedom\n  (67 observations deleted due to missingness)\nMultiple R-squared:  0.1628,\tAdjusted R-squared:  0.1625 \nF-statistic: 550.8 on 1 and 2832 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n##### Execution in Stata\n\n\n::: {.cell engine.path='C:/Stata15/Stata-64.exe'}\n\n```{.stata .cell-code}\ncd \"C://Data analysis\"\nuse \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear \ndrop if missing(tinc) | missing(got)\ngenerate treatment = cond(tinc>0, 1, 0)\nlabel define treatment 0 \"Control\" 1 \"Treatment\"\nlabel val treatment treatment\nregress got treatment\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n. cd \"C://Data analysis\"\nC:\\Data analysis\n\n. use \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear \n\n. drop if missing(tinc) | missing(got)\n(1,986 observations deleted)\n\n. generate treatment = cond(tinc>0, 1, 0)\n\n. label define treatment 0 \"Control\" 1 \"Treatment\"\n\n. label val treatment treatment\n\n. regress got treatment\n\n      Source |       SS           df       MS      Number of obs   =     2,834\n-------------+----------------------------------   F(1, 2832)      =    550.78\n       Model |  98.6657682         1  98.6657682   Prob > F        =    0.0000\n    Residual |  507.321529     2,832  .179138958   R-squared       =    0.1628\n-------------+----------------------------------   Adj R-squared   =    0.1625\n       Total |  605.987297     2,833  .213903035   Root MSE        =    .42325\n\n------------------------------------------------------------------------------\n         got |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n   treatment |   .4505519    .019198    23.47   0.000     .4129083    .4881954\n       _cons |   .3386838   .0169571    19.97   0.000     .3054343    .3719333\n------------------------------------------------------------------------------\n```\n:::\n:::\n\n\nThe treatment effect of receiving a financial incentive is 0.4506 or about 45 percentage points, compared to the control group average of about 34 percentage points. The treatment effect is statistically significant (has a p-value of 0.000).\n\n### Robust Standard Errors\n\nWhen making comparison between the distribution of outcomes between two groups, we assume that the two groups have the same variance even though their means differed. This assumption is called the homoskedasticity assumption. However, when the variance in the treatment and control group are different the assumption of homoskedasticity is violated, i.e., the error terms are heteroskedastic. In such cases, we have to use robust standard errors to account for heteroskedasticity. The robust standard errors do not affect the estimates of the parameters in the regression, but they tend to be larger than the unadjusted standard errors. This in turn makes the confidence interval wider.  \n\nTo test for heteroskedasticity, we run the Breusch-Pagan / Cook-Weisberg test for heteroskedasticity. It tests the null hypothesis of homoskedasticity against the alternative hypothesis of heteroskedasticity. We need to install the **lmtest** package and run the **bptest()** function. \n\n##### Execution in R\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lmtest)\nbptest(reg, studentize = FALSE) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tBreusch-Pagan test\n\ndata:  reg\nBP = 25.191, df = 1, p-value = 5.193e-07\n```\n:::\n:::\n\n\n##### Execution in Stata\n\nWe use the **estat hettest** command in Stata to test ko heteroskedasticity. \n\n\n::: {.cell engine.path='C:/Stata15/Stata-64.exe'}\n\n```{.stata .cell-code}\ncd \"C://Data analysis\"\nuse \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear \ndrop if missing(tinc) | missing(got)\ngenerate treatment = cond(tinc>0, 1, 0)\nlabel define treatment 0 \"Control\" 1 \"Treatment\"\nlabel val treatment treatment\nregress got treatment\nestat hettest\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n. cd \"C://Data analysis\"\nC:\\Data analysis\n\n. use \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear \n\n. drop if missing(tinc) | missing(got)\n(1,986 observations deleted)\n\n. generate treatment = cond(tinc>0, 1, 0)\n\n. label define treatment 0 \"Control\" 1 \"Treatment\"\n\n. label val treatment treatment\n\n. regress got treatment\n\n      Source |       SS           df       MS      Number of obs   =     2,834\n-------------+----------------------------------   F(1, 2832)      =    550.78\n       Model |  98.6657682         1  98.6657682   Prob > F        =    0.0000\n    Residual |  507.321529     2,832  .179138958   R-squared       =    0.1628\n-------------+----------------------------------   Adj R-squared   =    0.1625\n       Total |  605.987297     2,833  .213903035   Root MSE        =    .42325\n\n------------------------------------------------------------------------------\n         got |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n   treatment |   .4505519    .019198    23.47   0.000     .4129083    .4881954\n       _cons |   .3386838   .0169571    19.97   0.000     .3054343    .3719333\n------------------------------------------------------------------------------\n\n. estat hettest\n\nBreusch-Pagan / Cook-Weisberg test for heteroskedasticity \n         Ho: Constant variance\n         Variables: fitted values of got\n\n         chi2(1)      =    25.19\n         Prob > chi2  =   0.0000\n```\n:::\n:::\n\n\n::: callout-note\nThe Breusch-Pagan test may not capture heteroskedasticity in all instances. \n:::\n\nThe low p-value suggests that we can reject the null hypothesis of homoskedasticity. In this case, it is better to use robust standard errors instead of unadjusted standard errors. \n\n##### Running Regression with Robust Standard Errors\n\nTo use robust standard errors, we need to install the **sandwich** package and use **vcovHC()** function in the **coeftest()** function from the **lmtest** package. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sandwich)\ncoeftest(reg, vcov = vcovHC(reg, type = \"HC1\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nt test of coefficients:\n\n                   Estimate Std. Error t value  Pr(>|t|)    \n(Intercept)        0.338684   0.018968  17.856 < 2.2e-16 ***\ntreatmentTreatment 0.450552   0.020858  21.601 < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n:::\n\n\n##### Execution in Stata\n\nTo run a regression with robust standard errors, we run the **regress** command with the **robust** option.\n\n\n::: {.cell engine.path='C:/Stata15/Stata-64.exe'}\n\n```{.stata .cell-code}\ncd \"C://Data analysis\"\nuse \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear \ndrop if missing(tinc) | missing(got)\ngenerate treatment = cond(tinc>0, 1, 0)\nlabel define treatment 0 \"Control\" 1 \"Treatment\"\nlabel val treatment treatment\nregress got treatment, robust\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n. cd \"C://Data analysis\"\nC:\\Data analysis\n\n. use \"Thornton data/Data/Thornton HIV Testing Data.dta\", clear \n\n. drop if missing(tinc) | missing(got)\n(1,986 observations deleted)\n\n. generate treatment = cond(tinc>0, 1, 0)\n\n. label define treatment 0 \"Control\" 1 \"Treatment\"\n\n. label val treatment treatment\n\n. regress got treatment, robust\n\nLinear regression                               Number of obs     =      2,834\n                                                F(1, 2832)        =     466.60\n                                                Prob > F          =     0.0000\n                                                R-squared         =     0.1628\n                                                Root MSE          =     .42325\n\n------------------------------------------------------------------------------\n             |               Robust\n         got |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]\n-------------+----------------------------------------------------------------\n   treatment |   .4505519    .020858    21.60   0.000     .4096535    .4914502\n       _cons |   .3386838   .0189675    17.86   0.000     .3014922    .3758754\n------------------------------------------------------------------------------\n```\n:::\n:::\n\n\nThe coefficients of the treatment and constant term are the same. But the standard errors of both the parameters are larger. \n\n::: callout-note\nTo learn about measuring impact in an experiment with partial compliance, click [here](https://vajra-satish.github.io/posts/Does%20Learning%20One's%20HIV%20Status%20Change%20the%20Sexual%20Behavior%20of%20Individuals/) \n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}