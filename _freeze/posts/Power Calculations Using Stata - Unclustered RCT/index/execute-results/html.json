{
  "hash": "f77d3dad41e7ceb783611464f5d3af9e",
  "result": {
    "markdown": "---\ntitle: \"Power Calculations Using Stata: Unclustered RCT\"\nauthor: \"Satish Bajracharya\"\ndate: \"2024-15-03\"\ncategories: [Power Calculations, Survey]\nimage: \"image.jpg\"\nengine: \"knitr\"\n---\n\n::: {.cell}\n<style type=\"text/css\">\np {\n  text-align: justify\n}\n</style>\n:::\n\n\n# Individual level randomization\n\nIn this section, we calculate the power for individually randomized experiments. Suppose we want to calculate the sample size required for a randomized control trial(RCT) for a program intervention, where equal number of people are assigned to the treatment and control groups. We fix a test size ($\\alpha$) of 0.5 to calculate the sample size required to detect a 0.1 standard deviation effect size with 80% power. We use a standard deviation value of 1.\n\n::: callout-tip\n## Power Calculations\n\nTo know more about the theoretical approach to power calculations, check my previous blog [here](https://vajra-satish.github.io/blogs/Power%20Calculations%20in%20RCT%20-%20Without%20Clusters%20(Theory)/)\n:::\n\n##### Execution in R\n\nWe use the **pwr** package in R to calculate the sample size for individually randomized experiments. We use the **pwr.t.test()** function with arguments n, d, sig.level, power, and type. The default standard deviation value is 1 so we do not need to specify it. A brief description of the arguments is given below:\n\n| Arguments | Description                                   |\n|-----------|-----------------------------------------------|\n| n         | Number of observations (per sample)           |\n| d         | Effect size                                   |\n| sig.level | Significance level (Type I error probability) |\n| power     | Type of t test                                |\n\nTo run the **pwr.t.test()** function we need to install the *pwr* package with the install.packages command. Watch this [video](https://www.youtube.com/watch?v=-wTcDqJWSzA) to learn how to install packages in R.\n\nThe *power.t.test()* will give the sample size required to detect 0.1 standard deviation effect size, which is the difference between the treatment and control mean. We specify the value of n to NULL in order to get the number of observations per sample.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the pwr package\nlibrary(pwr)\n# Run the pwr.t.test function\npwr.t.test(n = NULL, \n           d = 0.1,\n           sig.level = 0.05,\n           power = 0.8,\n           type = \"two.sample\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n     Two-sample t test power calculation \n\n              n = 1570.733\n              d = 0.1\n      sig.level = 0.05\n          power = 0.8\n    alternative = two.sided\n\nNOTE: n is number in *each* group\n```\n:::\n:::\n\n\n##### Execution in Stata\n\nIn Stata, we use the command *power twomeans {hypothesized control mean} {hypothesized treatment mean}* where twomeans refers to the fact that we are comparing means between the control and treatment groups. To test a 0.1 standard deviation effect size, we set the mean value of control group to 1 and that of treatment group to 0.1. This will give us the result we want.\n\n\n::: {.cell engine.path='C:/Stata15/Stata-64.exe'}\n\n```{.stata .cell-code}\npower twomeans 0 0.1\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n. power twomeans 0 0.1\n\nPerforming iteration Estimated sample sizes for a two-sample means test\nt test assuming sd1 = sd2 = sd\nHo: m2 = m1  versus  Ha: m2 != m1\n\nStudy parameters:\n\n        alpha =    0.0500\n        power =    0.8000\n        delta =    0.1000\n           m1 =    0.0000\n           m2 =    0.1000\n           sd =    1.0000\n\nEstimated sample sizes:\n\n            N =     3,142\n  N per group =     1,571\n```\n:::\n:::\n\n\nWe would need a total sample size of 3,142 individuals who are randomly assigned to either treatment or control group, with 1,571 individuals in each, to detect a minimum detectable effect of 0.1 standard deviations.\n\n## Multiple effect size calculation\n\n##### Execution in R\n\nTo calculate the sample size required for the treatment effects (0.01, 0.025, 0.05, 0.1, 0.2), we can use the **for** function to iterate the **effect sizes** and use the **pwr.t.test** function to calculate the corresponding sample size.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create variable effect_sizes and assign the treatment effects\neffect_sizes <- c(0.01, 0.025, 0.05, 0.1, 0.2)\n# Initialize an empty dataframe to store the results\nresult_table <- data.frame()\n# Iterate over each effect size\nfor (i in effect_sizes) {\n# Calculate sample size using the pwr.t.test function\n# Make sure that the pwr package is loaded in R\nresult <- pwr.t.test(n = NULL,\n                     d = i, \n                     sig.level = 0.05,\n                     power = 0.8,\n                     type = \"two.sample\")\n# n gives the sample size for each group\n# Multiply by 2 to gett the total sample size\nsample_size <- result$n*2\n# Sample size for control group\nN1 <- sample_size\n# Sample size for treatment group\nN2 <- sample_size\n# Test size\nalpha <- result$sig.level\n# Power\npower <- result$power\n# Effect size\ndelta <- result$d\n# Control group mean\nm1 <- 0\n# Treatment group mean\nm2 <- result$d\n# Standard deviation\nStd_dev<- 1\n# Append the results to the dataframe\nresult_table <- rbind(result_table,\n                      c(alpha, \n                        power,\n                        sample_size,\n                        N1, \n                        N2, \n                        delta,\n                        m1, \n                        m2, \n                        Std_dev))\n}\n# Assign column names\ncolnames(result_table) <- c(\"Alpha\",\n                            \"Power\",\n                            \"Sample size\", \n                            \"N1\", \n                            \"N2\", \n                            \"Delta\", \n                            \"M1\", \n                            \"M2\", \n                            \"Std.Dev\")\n# Print the result table\nprint(result_table)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Alpha Power Sample size          N1          N2 Delta M1    M2 Std.Dev\n1  0.05   0.8 313956.3412 313956.3412 313956.3412 0.010  0 0.010       1\n2  0.05   0.8  50234.6281  50234.6281  50234.6281 0.025  0 0.025       1\n3  0.05   0.8  12560.0979  12560.0979  12560.0979 0.050  0 0.050       1\n4  0.05   0.8   3141.4661   3141.4661   3141.4661 0.100  0 0.100       1\n5  0.05   0.8    786.8114    786.8114    786.8114 0.200  0 0.200       1\n```\n:::\n:::\n\n\n##### Execution in Stata\n\nWe again use the power twomeans command in Stata to calculate the respective sample size for the given effect size. The option table(, labels(N \"Sample size\" sd \"Std. Dev\")) indicates that we want the output in table format, and that we want \"N\" to be renamed as \"Sample size and sd to be renamed as\"Std. Dev\".\n\n\n::: {.cell engine.path='C:/Stata15/Stata-64.exe'}\n\n```{.stata .cell-code}\npower twomeans 0 (0.01 0.025 0.05 0.1 0.2), table(, labels(N \"Sample size\" sd \"Std. Dev.\"))\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n. power twomeans 0 (0.01 0.025 0.05 0.1 0.2), table(, labels(N \"Sample size\" sd\n>  \"Std. Dev.\"))\n\nPerforming iteration Estimated sample sizes for a two-sample means test\nt test assuming sd1 = sd2 = sd\nHo: m2 = m1  versus  Ha: m2 != m1\n\n  +---------------------------------------------------------------------+\n  |   alpha   power Sample size      N1      N2   delta      m1      m2 |\n  |---------------------------------------------------------------------|\n  |     .05      .8     3.1e+05 1.6e+05 1.6e+05     .01       0     .01 |\n  |     .05      .8       50236   25118   25118    .025       0    .025 |\n  |     .05      .8       12562   6,281   6,281     .05       0     .05 |\n  |     .05      .8       3,142   1,571   1,571      .1       0      .1 |\n  |     .05      .8         788     394     394      .2       0      .2 |\n  +---------------------------------------------------------------------+\n  +-----------+\n  | Std. Dev. |\n  |-----------|\n  |         1 |\n  |         1 |\n  |         1 |\n  |         1 |\n  |         1 |\n  +-----------+\n```\n:::\n:::\n\n\nWe can see that the required sample size increases exponentially as the effect size approaches 0. Instead of a table calculations might be easier to interpret in a graph.\n\n## Plotting the relationship\n\n##### Execution in R\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the grammar of graphics package to plot the graph\nlibrary(ggplot2)\n# Load dplyr package to use pipe operator |> to enter commands in a chain\nlibrary(dplyr)\nresult_table |> # select variables Delta and Sample size from the data frame \n  select(Delta, `Sample size`) |>\n  ggplot(aes( x = Delta, y = `Sample size`)) + # plot Delta on the x-axis\n  # and Sample size on the y-axis\n  geom_line(color = \"#2c3e50\", lwd = 1) + # add a geometric line to the plot \n  geom_point(color = \"#2c3e50\", size = 2) + # add a geometric point to the plot \n  labs (title = \"Estimated total sample size for two-sample means test\",\n        x = \"Experimental-group mean\",\n        y = \"Total sample size\") + # add labels\n        theme(plot.title = element_text(hjust = 0.5)) \n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n##### Execution in Stata\n\n\n::: {.cell engine.path='C:/Stata15/Stata-64.exe'}\n\n```{.stata .cell-code}\npower twomeans 0 (0.01 0.025 0.05 0.1 0.2), graph\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\n. power twomeans 0 (0.01 0.025 0.05 0.1 0.2), graph\n```\n:::\n:::\n\n\n![](stata.png)\n\nNow, it is easier to visualize the relationship between sample size and effect size. The sample size increases exponentially as we appraoch an effect size of zero.  ",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}